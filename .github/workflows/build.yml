name: Build

on:
  push:
    branches:
      - main
    paths:
      - 'package.json'  # Déclenche uniquement si package.json est modifié

jobs:
  release:
    runs-on: ${{ matrix.os }}
    if: ${{ steps.check_version.outputs.VERSION_CHANGED == 'true' }}  # Exécuter seulement si la version change

    permissions:
      contents: write

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 2  # Permet de comparer avec le commit précédent

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.x

      - name: Check version change
        id: check_version
        run: |
          PREV_VERSION=$(git show HEAD~1:package.json | jq -r '.version')
          CURR_VERSION=$(jq -r '.version' package.json)

          echo "Ancienne version: $PREV_VERSION"
          echo "Nouvelle version: $CURR_VERSION"

          if [ "$PREV_VERSION" != "$CURR_VERSION" ]; then
            echo "VERSION_CHANGED=true" >> $GITHUB_ENV
            echo "::set-output name=VERSION_CHANGED::true"
          else
            echo "VERSION_CHANGED=false" >> $GITHUB_ENV
            echo "::set-output name=VERSION_CHANGED::false"
          fi
        shell: bash

      - name: Install Dependencies
        run: npm ci
        shell: bash

      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npm run dist
        shell: bash
